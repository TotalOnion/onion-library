@use '../fields-core-mixins-v3/core-mixins-v3';
@use '../fields-core-functions-v3/core-functions-v3';
@use '../component-box-shadow-v3/box-shadow-v3';
@use '../../breakpoints';

@mixin contentContainerSettingsV3() {
	&__inner-container {
		grid-area: main;
		place-self: var(--content-box-vert-align-mobile)
			var(--content-box-horiz-align-mobile);
		z-index: var(--content-z-index, 5);
		overflow: var(--content-box-overflow);
		min-width: min-content;
		aspect-ratio: var(--content-box-aspect-ratio);
		border-radius: var(--border-radius);
		border-width: var(--border-width);
		border-color: var(--border-colour);
		border-style: var(--border-style);
		display: flex;
		flex-direction: var(--content-box-items-direction-mobile, column);
		justify-content: var(--content-items-alignment-mobile);
		align-items: center;
		background-color: var(--cb-bg-colour);
		padding: calc(
				var(--global-inline-spacing) *
					var(--content-box-top-padding-mult-mobile)
			)
			calc(
				var(--global-inline-spacing) *
					var(--content-box-right-padding-mult-mobile)
			)
			calc(
				var(--global-inline-spacing) *
					var(--content-box-bottom-padding-mult-mobile)
			)
			calc(
				var(--global-inline-spacing) *
					var(--content-box-left-padding-mult-mobile)
			);
		margin: calc(
				var(--global-inline-spacing) *
					var(--content-container-top-margin-mobile)
			)
			calc(
				var(--global-inline-spacing) *
					var(--content-container-right-margin-mobile)
			)
			calc(
				var(--global-inline-spacing) *
					var(--content-container-bottom-margin-mobile)
			)
			calc(
				var(--global-inline-spacing) *
					var(--content-container-left-margin-mobile)
			);
		column-gap: var(
			--content-items-micro-gap-mobile,
			calc(var(--content-items-gap-mobile) * var(--global-inline-spacing))
		);
		@include core-mixins-v3.device(breakpoints.$tabPortrait) {
			justify-content: var(--content-items-alignment-portrait);
			place-self: var(--content-box-vert-align-portrait)
				var(--content-box-horiz-align-portrait);
			padding: calc(
					var(--global-inline-spacing) *
						var(--content-box-top-padding-mult-portrait)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-box-right-padding-mult-portrait)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-box-bottom-padding-mult-portrait)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-box-left-padding-mult-portrait)
				);
			margin: calc(
					var(--global-inline-spacing) *
						var(--content-container-top-margin-portrait)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-container-right-margin-portrait)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-container-bottom-margin-portrait)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-container-left-margin-portrait)
				);
		}

		@include core-mixins-v3.device(breakpoints.$tabLandscape) {
			column-gap: var(
				--content-items-micro-gap-desktop,
				calc(
					var(--content-items-gap-desktop) *
						var(--global-inline-spacing)
				)
			);
			justify-content: var(--content-items-alignment);
			max-width: var(--cb-max-width);
			place-self: var(--content-box-vert-align)
				var(--content-box-horiz-align);
			padding: calc(
					var(--global-inline-spacing) *
						var(--content-box-top-padding-mult)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-box-right-padding-mult)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-box-bottom-padding-mult)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-box-left-padding-mult)
				);
			margin: calc(
					var(--global-inline-spacing) *
						var(--content-container-top-margin)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-container-right-margin)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-container-bottom-margin)
				)
				calc(
					var(--global-inline-spacing) *
						var(--content-container-left-margin)
				);
		}

		@include box-shadow-v3.boxShadow();
	}
	&__content-container {
		max-width: var(--wysiwyg-max-width-mobile);
		margin-inline: auto;
		display: grid;
		word-break: normal;
		width: var(--content-container-width, 100%);
		-webkit-text-stroke: core-functions-v3.fontSize(
				var(--text-stroke-width),
				'static'
			)
			var(--text-stroke-colour);
		&:last-child {
			margin-bottom: 0;
		}
		@include core-mixins-v3.defaultThemeTextColours();
		@include core-mixins-v3.defaultTextTransform();
		@include core-mixins-v3.defaultTextAlign();
		@include core-mixins-v3.responsiveShowHide();
		p,
		h1,
		h2,
		h3,
		h4,
		h5,
		h6,
		a,
		li,
		div {
			@include core-mixins-v3.defaultFontWeight();
			@include core-mixins-v3.defaultFontStyle();
		}

		@include core-mixins-v3.device(breakpoints.$tabPortrait) {
			max-width: var(--wysiwyg-max-width-portrait);
		}

		@include core-mixins-v3.device(breakpoints.$tabLandscape) {
			max-width: var(--wysiwyg-max-width);
		}
	}

	&--text-shadow {
		@include core-mixins-v3.textShadow();
	}

	&__cta-selection-container {
		width: 100%;
		display: var(--cta-container-display);
		grid-template-columns: var(--grid-columns-mobile);
		flex-wrap: wrap;
		flex-direction: var(--cta-flex-direction);
		justify-content: var(--cta-alignment-mobile);
		gap: calc(var(--global-inline-spacing) * var(--cta-spacing-gap-mobile));

		@include core-mixins-v3.device(breakpoints.$tabPortrait) {
			gap: calc(
				var(--global-inline-spacing) * var(--cta-spacing-gap-desktop)
			);
			justify-content: var(--cta-alignment-portrait);
			grid-template-columns: var(--grid-columns-portrait);
		}
		@include core-mixins-v3.device(breakpoints.$tabLandscape) {
			justify-content: var(--cta-alignment);
			grid-template-columns: var(--grid-columns-desktop);
		}
	}
}
