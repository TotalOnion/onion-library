// LIBRARY FILE - Do not modify/override here as your changes will be lost when the package is updated.
@use 'Assets/scss/modules/library-modules/core-mixins/core-mixins';
@use 'Assets/scss/modules/library-modules/core-functions/core-functions';
@use 'Assets/scss/theme/breakpoints';
@use 'Assets/scss/blocks/divider/divider-extra';

.divider {
	display: grid;
	@include core-mixins.responsiveShowHide(grid);

	&.vertical {
		height: 100%;
		.divider__line {
			height: 100%;

			@include core-mixins.device(breakpoints.$tabPortrait) {
				height: 100%;
			}

			@include core-mixins.device(breakpoints.$tabLandscape) {
				height: 100%;
			}
		}
	}

	&.horizontal {
		.divider__line {
			width: 100%;

			@include core-mixins.device(breakpoints.$tabPortrait) {
				width: 100%;
			}

			@include core-mixins.device(breakpoints.$tabLandscape) {
				width: 100%;
			}
		}
	}

	&__line {
		background-color: var(--divider-background-colour);
		background-image: var(--divider-background-image);
		background-repeat: var(--divider-background-repeat);
		background-position: var(--divider-background-position-x)
			var(--divider-background-position-y);
		width: core-functions.fluidSize(var(--divider-width), 'mobile');
		height: core-functions.fluidSize(var(--divider-height), 'mobile');
		place-self: var(--divider-vertical-position)
			var(--divider-horizontal-position);
		max-width: core-functions.fluidSize(
			var(--divider-max-width-mobile),
			'mobile'
		);
		max-height: core-functions.fluidSize(
			var(--divider-max-height-mobile),
			'mobile'
		);

		@include core-mixins.device(breakpoints.$tabPortrait) {
			height: core-functions.fluidSize(var(--divider-height), 'portrait');
			width: core-functions.fluidSize(var(--divider-width), 'portrait');
			max-width: core-functions.fluidSize(
				var(--divider-max-width-portrait),
				'portrait'
			);
			max-height: core-functions.fluidSize(
				var(--divider-max-height-portrait),
				'portrait'
			);
		}

		@include core-mixins.device(breakpoints.$tabLandscape) {
			height: core-functions.fluidSize(var(--divider-height), 'desktop');
			width: core-functions.fluidSize(var(--divider-width), 'desktop');
			max-width: core-functions.fluidSize(
				var(--divider-max-width-desktop),
				'desktop'
			);
			max-height: core-functions.fluidSize(
				var(--divider-max-height-desktop),
				'desktop'
			);
		}
	}
	@include divider-extra.additionalStyles();
}
