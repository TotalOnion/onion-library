<?php
// Do not edit this file outside of the component library as otherwise your changes will be lost with future updates.

/**
 * Adds a dropdown to the admin panel for filtering pages by blocks used on the page.
 *
 * @package Global Theme
 */

/**
 * Register 'block' as a query variable.
 *
 * @param array $vars The existing query variables.
 * @return array The modified query variables.
 */
function register_search_block_query_var( $vars ) {
	$vars[] = 'block';
	return $vars;
}
add_filter( 'query_vars', 'register_search_block_query_var' );

/**
 * Add a block types filter dropdown to the admin post list table.
 *
 * @param string $post_type The current post type.
 */
function add_block_types_filter_dropdown( $post_type ) {
	// Check if block editor is used for the post type
	if ( ! use_block_editor_for_post_type( $post_type ) ) {
		return;
	}

	// Get all registered block types
	$block_types = \WP_Block_Type_Registry::get_instance()->get_all_registered();

	$options = array_reduce(
		$block_types,
		function ( $options, $block_type ) {
			// Generate option value based on block type name
			$val = '<!-- wp:' . str_replace( 'core/', '', $block_type->name ) . ' ';

			// Generate option HTML with selected attribute if it matches the current block query
			$option_html = sprintf(
				'<option value="%s" %s>%s</option>',
				esc_attr( $val ),
				selected( get_query_var( 'block' ), $val, false ),
				esc_html( $block_type->title ? $block_type->title : $block_type->name )
			);

			// Append the option HTML to the options string
			return $options . $option_html;
		},
		''
	);

	// Output the block filter dropdown
	echo '<select name="block"><option value="">' . esc_html( __( 'All Block Types', 'Global Theme' ) ) . '</option>' . wp_kses( $options, array( 'option' => array( 'value' => array() ) ) ) . '</select>';
}
add_action( 'restrict_manage_posts', 'add_block_types_filter_dropdown' );

/**
 * Modify the main query before it runs.
 *
 * @param WP_Query $query The WP_Query instance.
 */
function modify_search_query_for_block( $query ) {
	// Check if we're in the admin area, main query, and performing a search
	if ( is_admin() && $query->is_main_query() && $query->is_search() ) {
		// Get the block query variable and URL decode.
		$block_query_input = urldecode( get_query_var( 'block' ) );
		// Sanitize block query input.
		$block_query = str_replace( '&lt;', '<', sanitize_text_field( $block_query_input ) );

		// Check if the block query variable contains a block pattern
		if ( strpos( $block_query, '<!-- wp:' ) !== false ) {
			// Modify the search query to search for the block pattern in the post content
			$query->set( 's', $block_query );
		}
	}
}
add_action( 'pre_get_posts', 'modify_search_query_for_block' );
