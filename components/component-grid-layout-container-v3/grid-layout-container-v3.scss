@use 'Assets/scss/theme/breakpoints';
@use 'Assets/scss/modules/library-modules/core-mixins-v3/core-mixins-v3';
@use 'Assets/scss/modules/library-modules/core-functions-v3/core-functions-v3';

@mixin gridLayoutContainer() {
	display: var(--display-type, 'grid');
	position: relative;
	scroll-snap-type: var(--scroll-snap-type, none);
	> div {
		scroll-snap-align: var(--scroll-snap-align, start);
	}
	overflow: var(--container-overflow-type, hidden);
	grid-gap: calc(var(--global-inline-spacing) * var(--row-gap-mult-mobile, 0))
		calc(var(--global-inline-spacing) * var(--column-gap-mult-mobile, 0));
	grid-auto-flow: var(--grid-auto-flow-mobile, row);
	--grid-auto-columns-custom-size: #{core-functions-v3.fluidSize(
			var(--grid-auto-columns-custom),
			'static'
		)};
	grid-auto-columns: var(--grid-auto-columns-mobile, 1fr);
	grid-auto-rows: var(--grid-auto-rows-mobile, 1fr);
	grid-template-columns: var(
		--grid-template-columns-custom-mobile,
		repeat(
			var(--grid-template-columns-mobile),
			var(--grid-auto-columns-mobile, 1fr)
		)
	);
	grid-template-rows: var(
		--grid-template-rows-custom-mobile,
		repeat(
			var(--grid-template-rows-mobile),
			var(--grid-auto-rows-mobile, 1fr)
		)
	);

	@include core-mixins-v3.device(breakpoints.$tabPortrait) {
		grid-auto-flow: var(--grid-auto-flow-portrait, row);
		grid-auto-columns: var(--grid-auto-columns-portrait, 1fr);
		grid-auto-rows: var(--grid-auto-rows-portrait, 1fr);
		grid-gap: calc(
				var(--global-inline-spacing) * var(--row-gap-mult-portrait, 0)
			)
			calc(
				var(--global-inline-spacing) *
					var(--column-gap-mult-portrait, 0)
			);
		grid-template-columns: var(
			--grid-template-columns-custom-portrait,
			repeat(
				var(--grid-template-columns-portrait),
				var(--grid-auto-columns-portrait, 1fr)
			)
		);
		grid-template-rows: var(
			--grid-template-rows-custom-portrait,
			repeat(
				var(--grid-template-rows-portrait),
				var(--grid-auto-rows-portrait, 1fr)
			)
		);
	}

	@include core-mixins-v3.device(breakpoints.$tabLandscape) {
		grid-gap: calc(
				var(--global-inline-spacing) * var(--row-gap-mult-desktop, 0)
			)
			calc(
				var(--global-inline-spacing) * var(--column-gap-mult-desktop, 0)
			);
		grid-auto-flow: var(--grid-auto-flow-desktop, row);
		grid-auto-columns: var(--grid-auto-columns, auto);
		grid-auto-rows: var(--grid-auto-rows, auto);
		grid-template-columns: var(
			--grid-template-columns-custom-desktop,
			repeat(
				var(--grid-template-columns-desktop, 1),
				var(--grid-auto-columns-desktop, 1fr)
			)
		);
		grid-template-rows: var(--grid-template-rows-custom-desktop);
	}
}
